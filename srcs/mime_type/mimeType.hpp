#ifndef MIMETYPE_HPP
# define MIMETYPE_HPP

#include <map>
#include <string>
#include <vector>
#include <fstream>

#include "../stdlib/stdlib.hpp"

namespace ft
{
	class MimeType
	{
		//================================================================================================
		//	attributes
		//================================================================================================
		private:
			static std::map<std::string, std::string>	_library;
		//================================================================================================
		//	attributes End
		//================================================================================================


		//================================================================================================
		//	destructors, constructors, and assignment operators
		//================================================================================================
		public:
			MimeType();
			~MimeType();

			MimeType(const std::string& fileName);
			MimeType(const MimeType& src);

			MimeType	&operator=(const MimeType& rhs);
		//================================================================================================
		//	destructors, constructors, and assignment operators End
		//================================================================================================
		

		//================================================================================================
		//	MimeType operations
		//================================================================================================
		public:
			static void			setMimesTypes(const std::string& fileName);
			static std::string	resolve(const std::string& extension);
		//================================================================================================
		//	MimeType operations End
		//================================================================================================
		

		//================================================================================================
		//	Private methods
		//================================================================================================
		private:
			void	_deepCopy(const MimeType& src);
		//================================================================================================
		//	Private methods End
		//================================================================================================
	};
}

#endif