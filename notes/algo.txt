
=====================================================================================================
nginy:
	*	servers
	*	clients
	*	multiplexer
	*	configFileName


-	initiate servers:
	for each server
		-	create a socket
		-	bind it to an address
		-	listen on that socket
-	add all the servers the read monitored fds
-	select on the monitored fds
	*	if ready to read
		-	fd is server socket
			-	accept the connection
			-	add the new connection to the monitored fds
		-	fd is a client socket
			-	recv
			-	handle request
			-	remove fd from the read monitered fds and add it to the write monitered fds
	*	if ready to write (a server fd is never going to be here)
			-	handle response
			-	send
=====================================================================================================



=====================================================================================================
server :
	-	sockt
	-	servernames
	-	root
	-	allowed methods
	-	indexes
	-	error pages
	-	served locations


location:
	-	root
	-	auto index
	-	allowed methods
	-	indexes
	-	redirections
	-	uploadPath
	-	default served file??
=====================================================================================================


=====================================================================================================
client:
	-	socket
	-	request
	-	response
	-	keep alive

request:
	-	msg
	-	method
	-	path
	-	version
	-	headers
	-	body -> file

response:
	-	msg
	-	version
	-	HttpStatus
	-	headers : from the request or/and cgi
	-	body


handle request:
	-	read to a buffer
	-	check if there is a blank line
		-	yes:
			-	add what is before it to msg
			-	write what is after it to a tmp file to hold the body
		-	no
			-	add the buffer to the msg
	-	parse request
	-	use the body length to know when to stop reading
	-	fetch the targeted host
	-	prepare the response


handle response:
	-	
=====================================================================================================


=====================================================================================================
header :
	-	key
	-	value
	+	checkValidity

HttpStatus:
	code
	msg
=====================================================================================================


=====================================================================================================
sockt:
	-	create
	-	bind
	-	listen
	-	connect
	-	accept
	-	send
	-	receive

serverSockt:
	-	setup
	-	wakeup

clientSockt
	-	setup
	-	wakeup
=====================================================================================================


=====================================================================================================
multiplex:
	*	_readfds
	*	_writefds
	*	_exceptfds
	*	_readMonitered
	*	_writeMonitered
	*	_exceptMonitered
	-	add fd
	-	delete fd
	-	multiplexFunction -> fetch
=====================================================================================================


=====================================================================================================

=====================================================================================================
