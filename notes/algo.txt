for each server
	-	create a socket
	-	bind it to an address
	-	listen on that socket
	-	accept connecttions
		-	if the client already accepted
			-	use that client
		-	otherwise
			-	create a client for each accepted connection
	-	select
		-	request
			-	recv
			-	handle request
		-	response
			-	handle response
			-	send


handle request:
	-	parse request

handle response:
	-	

server:
	-	socket
	-	servername
	-	aliases (other servernames)
	-	root
	-	served locations
	-	clients


location:
	-	allowed methods
	-	redirections
	-	auto index
	-	default served file


client:
	-	socket
	-	request
	-	response
	-	keep alive


request:
	-	msg
	-	method
	-	path
	-	version
	-	headers : pair<string, string> : header, value
	-	body


response:
	-	msg
	-	status code
	-	headers : from the request
	-	body


sockt:
	-	create
	-	bind
	-	listen
	-	connect
	-	accept
	-	send
	-	receive

serverSockt:
	-	setup
	-	wakeup

clientSockt
	-	setup
	-	wakeup