#ifndef HEADER_HPP
# define HEADER_HPP

#include <string>

namespace ft
{
	class Header
	{
		//================================================================================================
		//	attributes
		//================================================================================================
		public:
			std::string	key;
			std::string	value;
		//================================================================================================
		//	attributes End
		//================================================================================================

		//================================================================================================
		//	destructors, constructors, and assignment operators
		//================================================================================================
		public:
			Header();
			~Header();

			Header(const Header& src);
			Header(const std::string& key, const std::string& value);

			Header	&operator=(const Header& rop);
		//================================================================================================
		//	destructors, constructors, and assignment operators End
		//================================================================================================


		//================================================================================================
		//	Header operations
		//================================================================================================
		public:
		//================================================================================================
		//	Header operations End
		//================================================================================================

		//================================================================================================
		//	private methods
		//================================================================================================
		private:
			void	_deepCopy(const Header& src);
		//================================================================================================
		//	private methods End
		//================================================================================================
	};
}

#endif